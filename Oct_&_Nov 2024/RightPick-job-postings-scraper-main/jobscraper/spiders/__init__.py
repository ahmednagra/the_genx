# This package will contain the spiders of your Scrapy project
#
# Please refer to the documentation for information on how to create and manage
# your spiders.

COMMON_FIELDS = ["company_title", "company", "title", "industry", "seniority", "location", "url", "date_scraped",
                 "salary", "benefits", "requirements", "responsibilities", "description", "id_unique",
                 "location_list_flattened"]

SPIDERS = {
    'mckinsey': {'file_name': 'mckinsey.py', 'class_name': 'McKinseySpider',
                 'custom_fields': ["job_id", "job_skill_group", "job_skill_code", "interest", "interest_category",
                                   "functions", "industries", "who_you_will_work_with", "what_you_will_do",
                                   "your_background", "post_to_linkedin", "job_apply_url"]},
    'bain': {'file_name': 'bain.py', 'class_name': 'BainSpider',
             'custom_fields': ["apply_url", "id", "areas_of_work", "employment_type"]},
    'bcg': {'file_name': 'bcg.py', 'class_name': 'BCGSpider',
            'custom_fields': ["job_id", "categories", "subcategory", "posted_date", "created_date", "skills",
                              "industry", "apply_url", "keyword_clicks", "location_clicks", "category_clicks",
                              "landing_page_clicks", "total_search_clicks"]},
    'meta': {'file_name': 'meta.py', 'class_name': 'MetaSpider',
             'custom_fields': ["id", "teams", "subteams", "related_jobs"]},
    'goldmansachs': {'file_name': 'goldman_sachs.py', 'class_name': 'GoldmanSachsSpider',
                     'custom_fields': ["job_id", "job_skill_group", "job_skill_code", "interest", "interest_category",
                                       "functions", "industries", "who_you_will_work_with", "what_you_will_do",
                                       "your_background", "post_to_linkedin", "job_apply_url"]},
    'jpmorgan': {'file_name': 'jpmorgan.py', 'class_name': 'JPMorganSpider',
                 'custom_fields': ["job_identification", "business_unit", "job_shift", "job_function",
                                   "responsibilities", "requirements", "preferred_requirements", "posting_date",
                                   "apply_before", "short_description", "job_category", "job_schedule"]},
    'google': {'file_name': 'google_spider.py', 'class_name': 'GoogleSpider',
               'custom_fields': ["apply_link", "minimum_qualifications", "preferred_qualifications", "organization",
                                 "experience_level", "job_type"]},
    'morganstanley': {'file_name': 'morganstanley.py', 'class_name': 'MorganstanleySpider',
                      'custom_fields': ["business_unit", "job_type", "apply_link", "type", "posted_date", "job_level"]},
    'apple': {'file_name': 'apple.py', 'class_name': 'AppleSpider',
              'custom_fields': ["job_summary", "key_qualifications", "education_and_experience",
                                "additional_requirements", "posted_date", "pay_and_benefits", "standard_weekly_hours",
                                "team_names", "employment_type", "description_short"]},
    'amazon': {'file_name': 'amazon.py', 'class_name': 'AmazonSpider',
               'custom_fields': ["job_type", "posted_date", "job_category", "apply_link", "company_name",
                                 "business_category", "basic_qualifications", "preferred_qualifications",
                                 "updated_time", "team", "primary_search_label"]},
    'microsoft': {'file_name': 'microsoft.py', 'class_name': 'MicrosoftSpider',
                  'custom_fields': ["job_type", "posted_date", "work_site_flexibility", "travel_percentage",
                                    "role_type", "category", "subcategory", "education_level"]},
    'kearney': {'file_name': 'kearney.py', 'class_name': 'KearneySpider', 'custom_fields': ["apply_link"]},
    'netflix': {'file_name': 'netflix.py', 'class_name': 'NetflixSpider',
                'custom_fields': ["id", "department", "business_unit", "type", "locale", "stars",
                                  "location_flexibility", "work_location_option", "canonicalPositionUrl",
                                  "organization", "team", "state", "lever_team"]},
    'bankofamerica': {'file_name': 'bankofamerica.py', 'class_name': 'BankOfAmericaSpider',
                      'custom_fields': ["brand", "family", "lob", "area", "subLob", "apply_link", "yearsOfExperience",
                                        "minYearsOfExperience", "workShift", "postingSite", "travelRequired",
                                        "job_type", "info_id"]},
    'uber': {'file_name': 'uber.py', 'class_name': 'UberSpider',
             'custom_fields': ["id", "apply_link", "department", "program_and_platform", "level", "creation_date",
                               "team", "portal_id", "status_id", "status_name", "job_type"]},
    'oliverwyman': {'file_name': 'oliverwyman.py', 'class_name': 'OliverwymanSpider',
                    'custom_fields': ["id", "apply_link", "posted_date", "job_type", "category", "sub_category",
                                      "skills"]},
    'airbnb': {'file_name': 'airbnb.py', 'class_name': 'AirbnbSpider', 'custom_fields': ["apply_link"]},
    'citigroup': {'file_name': 'citigroup.py', 'class_name': 'CitigroupSpider',
                  'custom_fields': ["id", "apply_link", "job_type", "date_posted"]},
    'spotify': {'file_name': 'spotify.py', 'class_name': 'SpotifySpider',
                'custom_fields': ["id", "apply_link", "job_type", "main_category", "sub_category"]},
    'rolandberger': {'file_name': 'rolandberger.py', 'class_name': 'RolandBergerSpider',
                     'custom_fields': ['id', 'apply_link', 'posted_date']},
    'lek': {'file_name': 'lek.py', 'class_name': 'LEKSpider', 'custom_fields': ['apply_link', 'end_of_url']},
    'blackrock': {'file_name': 'blackrock.py', 'class_name': 'BlackRockSpider',
                  'custom_fields': ['id', 'apply_link', 'category', 'posted_date', 'job_id']},
    'occstrategy': {'file_name': 'occstrategy.py', 'class_name': 'OCCStrategySpider',
                    'custom_fields': ['vacancy_deadline']},
    'janestreet': {'file_name': 'janestreet.py', 'class_name': 'JaneStreetSpider',
                   'custom_fields': ['department', 'availability', 'team', 'apply_link', 'duration', 'min_salary',
                                     'max_salary']},
    'barclays': {'file_name': 'barclays.py', 'class_name': 'BarclaysSpider',
                 'custom_fields': ['posted_date', 'employment_type']},
    'ubs': {'file_name': 'ubs.py', 'class_name': 'UbsSpider',
            'custom_fields': ['lastupdated', 'department', 'category']},
    'paypal': {'file_name': 'paypal.py', 'class_name': 'PaypalSpider',
               'custom_fields': ['work_location_option', 'business_unit', 'date_posted', 'valid_through',
                                 'employment_type', 'hiring_organization', 'apply_url']},
    'pinterest': {'file_name': 'pinterest.py', 'class_name': 'PinterestSpider',
                  'custom_fields': ['applicant_location_req', 'date_posted', 'hiring_organization', 'industry']},
    'snap': {'file_name': 'snap.py', 'class_name': 'SnapSpider',
             'custom_fields': ['job_posting_site', 'date_posted', 'role', 'emp_type']},
    'tiktok': {'file_name': 'tiktok.py', 'class_name': 'TiktokSpider', 'custom_fields': ['category']}
}

COMPANY_TITLES = {
    "mckinsey": "McKinsey & Company",
    "bcg": "Boston Consulting Group",
    "bain": "Bain & Company",
    "goldmansachs": "Goldman Sachs",
    "meta": "Meta",
    "jpmorgan": "JPMorgan",
    "google": "Google",
    "rolandberger": "Roland Berger",
    "kearney": "Kearney",
    "oliverwyman": "Oliver Wyman",
    "lek": "L.E.K. Consulting",
    "occ": "OC&C Strategy Consultants",
    "morganstanley": "Morgan Stanley",
    "lazard": "Lazard Ltd",
    "rothschild": "Rothschild & Co",
    "bankofamerica": "Bank of America",
    "citigroup": "Citigroup",
    "hsbc": "HSBC",
    "bnpparisbas": "BNP Paribas",
    "deutschebank": "Deutsche Bank",
    "apple": "Apple",
    "amazon": "Amazon",
    "microsoft": "Microsoft",
    "spotify": "Spotify",
    "uber": "Uber",
    "netflix": "Netflix",
    "airbnb": "Airbnb",
    "twitter": "Twitter",
    "instagram": "Instagram",
    "messenger": "Messenger",
    "youtube": "YouTube",
    "linkedin": "LinkedIn",
    "snapchat": "Snap Inc.",
    "salesforce": "Salesforce",
    "tesla": "Tesla",
    "blackrock": "BlackRock",
    "occstrategy": "OC&C Strategy Consultants",
    'janestreet': 'Jane Street',
    'barclays': 'Barclays',
    'ubs': 'UBS',
    'paypal': 'PayPal',
    'pinterest': 'Pinterest',
    'snap': 'Snap Inc.',
    'tiktok': 'Tiktok'
}


def close_spider(spider, reason):
    spider.close_reason = reason
    if reason == 'finished':
        spider.run_completed = True
        spider.logger.info('Spider completed its run successfully.')
    elif reason == 'closespider_itemcount':
        spider.logger.warning('Spider closed due to item count limit (possibly API credit shortage)')
    else:
        spider.logger.warning(f'Spider closed for reason: {reason}')
